"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateSavedFeed = exports.getSavedFeedType = exports.savedFeedsToUriArrays = exports.sanitizeMutedWordValue = void 0;
const syntax_1 = require("@atproto/syntax");
const common_web_1 = require("@atproto/common-web");
function sanitizeMutedWordValue(value) {
    return (value
        .trim()
        .replace(/^#(?!\ufe0f)/, '')
        // eslint-disable-next-line no-misleading-character-class
        .replace(/[\r\n\u00AD\u2060\u200D\u200C\u200B]+/, ''));
}
exports.sanitizeMutedWordValue = sanitizeMutedWordValue;
function savedFeedsToUriArrays(savedFeeds) {
    const pinned = [];
    const saved = [];
    for (const feed of savedFeeds) {
        if (feed.pinned) {
            pinned.push(feed.value);
            // saved in v1 includes pinned
            saved.push(feed.value);
        }
        else {
            saved.push(feed.value);
        }
    }
    return {
        pinned,
        saved,
    };
}
exports.savedFeedsToUriArrays = savedFeedsToUriArrays;
/**
 * Get the type of a saved feed, used by deprecated methods for backwards
 * compat. Should not be used moving forward. *Invalid URIs will throw.*
 *
 * @param uri - The AT URI of the saved feed
 */
function getSavedFeedType(uri) {
    const urip = new syntax_1.AtUri(uri);
    switch (urip.collection) {
        case 'app.bsky.feed.generator':
            return 'feed';
        case 'app.bsky.graph.list':
            return 'list';
        default:
            return 'unknown';
    }
}
exports.getSavedFeedType = getSavedFeedType;
function validateSavedFeed(savedFeed) {
    new common_web_1.TID(savedFeed.id);
    if (['feed', 'list'].includes(savedFeed.type)) {
        const uri = new syntax_1.AtUri(savedFeed.value);
        const isFeed = uri.collection === 'app.bsky.feed.generator';
        const isList = uri.collection === 'app.bsky.graph.list';
        if (savedFeed.type === 'feed' && !isFeed) {
            throw new Error(`Saved feed of type 'feed' must be a feed, got ${uri.collection}`);
        }
        if (savedFeed.type === 'list' && !isList) {
            throw new Error(`Saved feed of type 'list' must be a list, got ${uri.collection}`);
        }
    }
}
exports.validateSavedFeed = validateSavedFeed;
//# sourceMappingURL=util.js.map